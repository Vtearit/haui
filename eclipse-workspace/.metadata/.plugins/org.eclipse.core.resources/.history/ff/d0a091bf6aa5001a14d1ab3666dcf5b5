package LinkedBlockingDeque_Topic;
//Edit: Group of 10

import java.util.concurrent.LinkedBlockingDeque;
import java.util.*;

/**
 * 
 * The <b>LinkedBlockingDeque</b> class in Java is a part of the Java Collection
 * Framework and implements the Collection interface and the AbstractQueue
 * class. It also implements the BlockingDeque and provides an
 * optionally-bounded functionality based on linked nodes. This optional 
 * boundedness is served by passing the required size in the constructor and
 * helps in preventing memory wastage. When unspecified, the capacity is by
 * default taken as <b>Integer.MAX_VALUE</b>. <br/>
 * <i>update 03/06/2020</i>
 * 
 * 
 * @author Vtearit
 *
 */

public class Example {
	/**
	 * 
	 * Java Program Demonstrate add() method of LinkedBlockingDeque
	 * 
	 * @throws IllegalStateException
	 * 
	 * 
	 */

	public static LinkedBlockingDeque<Integer> intializingIntegerLinkedBlockingDeque() {

		// Creating an empty ArrayDeque
		LinkedBlockingDeque<Integer> LBD = new LinkedBlockingDeque<Integer>();

		// Use add() method to add elements into the Deque
		LBD.add(7855642);
		LBD.add(35658786);
		LBD.add(5278367);
		LBD.add(74381793);

		showLinkedBlockingDeque(LBD);

		return LBD;
	}
	
    // Displaying the LinkedBlockingDeque
    public static void showLinkedBlockingDeque(LinkedBlockingDeque<Integer> LBD) {
        System.out.println("ArrayDeque: " + LBD);
        System.out.println("");
    }

	
	//addFirstDeque() method to add element to the beginning of the array
    public static LinkedBlockingDeque<Integer> addFirstLinkedBlockingDeque(LinkedBlockingDeque<Integer> LBD) {
        //Adding elements at the beggining
        LBD.addFirst(40); 
        LBD.addFirst(50); 
        LBD.addFirst(60); 
        LBD.addFirst(70);
        
        return LBD; 
    }

	public static void LinkedBlockingDeque(String[] args) {
		// TODO Auto-generated method stub
		LinkedBlockingDeque<Integer> LBD = intializingIntegerLinkedBlockingDeque();
		addFirstLinkedBlockingDeque(LBD);
		System.out.println("LinkedBlockingDeque after using addFirst() method: ");
        showLinkedBlockingDeque(LBD);
        
        return;
	}

}
